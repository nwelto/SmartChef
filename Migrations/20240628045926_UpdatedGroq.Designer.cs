// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace SmartChef.Migrations
{
    [DbContext(typeof(SmartChefDbContext))]
    [Migration("20240628045926_UpdatedGroq")]
    partial class UpdatedGroq
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartChef.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<string>("Ingredients")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SourceUrl")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            ImageUrl = "http://example.com/spaghetti.jpg",
                            Ingredients = "[\"Spaghetti\", \"Ground Beef\", \"Tomato Sauce\"]",
                            Instructions = "Cook spaghetti. Prepare the sauce...",
                            SourceUrl = "http://example.com/spaghetti-recipe",
                            Title = "Spaghetti Bolognese"
                        },
                        new
                        {
                            RecipeId = 2,
                            ImageUrl = "http://example.com/grilledcheese.jpg",
                            Ingredients = "[\"Bread\", \"Cheese\", \"Butter\"]",
                            Instructions = "Butter the bread. Grill the cheese...",
                            SourceUrl = "http://example.com/grilledcheese-recipe",
                            Title = "Grilled Cheese Sandwich"
                        });
                });

            modelBuilder.Entity("SmartChef.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirebaseUid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "user1@example.com",
                            FirebaseUid = "firebase-uid-1",
                            Username = "user1"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "user2@example.com",
                            FirebaseUid = "firebase-uid-2",
                            Username = "user2"
                        });
                });

            modelBuilder.Entity("SmartChef.Models.UserRecipe", b =>
                {
                    b.Property<int>("UserRecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserRecipeId"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UserRecipeId");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRecipes");

                    b.HasData(
                        new
                        {
                            UserRecipeId = 1,
                            RecipeId = 1,
                            UserId = 1
                        },
                        new
                        {
                            UserRecipeId = 2,
                            RecipeId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("SmartChef.Models.UserRecipe", b =>
                {
                    b.HasOne("SmartChef.Models.Recipe", "Recipe")
                        .WithMany("UserRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartChef.Models.User", "User")
                        .WithMany("UserRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SmartChef.Models.Recipe", b =>
                {
                    b.Navigation("UserRecipes");
                });

            modelBuilder.Entity("SmartChef.Models.User", b =>
                {
                    b.Navigation("UserRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
